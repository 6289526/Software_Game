{"version":3,"sources":["webpack://electrontodo/external \"child_process\"","webpack://electrontodo/webpack/bootstrap","webpack://electrontodo/./src/server.js"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","childProcess","exec","async","main","command","messages","document","querySelector","li","createElement","textContent","insertBefore","firstElementChild","spawn","shell","stdout","on","data","console","log","toString","line","split","li2","stderr","code","window","addEventListener","client_num","cmd","Promise","resolve","reject","err","sh","pros","i","length","kill","firstChild","removeChild","clean"],"mappings":"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","file":"bundle.js","sourcesContent":["module.exports = require(\"child_process\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const childProcess = require('child_process');\nconst { exec } = require('child_process');\n/**\n * Execute simple Shell command (async wrapper).\n * @param {String} cmd\n * @return {Object} { stdout: String, stderr: String }\n */\nasync function sh(cmd) {\n    return new Promise(function (resolve, reject) {\n        exec(cmd, (err, stdout, stderr) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve({ stdout, stderr });\n            }\n        });\n    });\n}\n\n// var Shell = WScript.CreateObject(\"WScript.Shell\");\n// Shell.Run(\"command here\");\n\nasync function main(command) {\n    var messages = document.querySelector('ul');\n    const li = document.createElement('li');\n    // let { stdout } = await sh(command);\n    li.textContent = command;\n    messages.insertBefore(li, messages.firstElementChild);\n    const spawn = childProcess.spawn(command, { shell: true });\n    spawn.stdout.on('data', (data) => {\n        console.log('STDOUT', data.toString());\n        // messages.append($(\"<li>\").text(command));\n        for (let line of data.toString().split('\\n')) {\n            const li2 = document.createElement('li');\n            li2.textContent = line;\n            messages.insertBefore(li2, messages.firstElementChild);\n            console.log(`${line}`);\n        }\n    });\n    spawn.stderr.on('data', (data) => {\n        console.log('STDERR', data.toString());\n        for (let line of data.toString().split('\\n')) {\n            const li2 = document.createElement('li');\n            li2.textContent = line;\n            messages.insertBefore(li2, messages.firstElementChild);\n            console.log(`${line}`);\n        }\n    });\n    spawn.on('close', (code) => {\n        console.log('CODE', code);\n        for (let line of data.toString().split('\\n')) {\n            const li2 = document.createElement('li');\n            li2.textContent = line;\n            messages.insertBefore(li, messages.firstElementChild);\n            console.log(`${line}`);\n        }\n    });\n}\n\nasync function kill() {\n    let { stdout } = await sh('ps -a | grep server');\n    console.log(stdout);\n    let pros = stdout.split(' ');\n    var i = 0;\n    for (i = 0; i < pros.length; i++) {\n        if (pros[i] != '') {\n            break;\n        }\n    }\n    console.log(pros[i]);\n    main('kill -9' + ' ' + pros[i]);\n    \n}\n\nfunction clean() {\n    const messages = document.querySelector('ul');\n    while (messages.firstChild) {\n        messages.removeChild(messages.firstChild);\n    }\n}\n\nwindow.addEventListener('DOMContentLoaded', onLoad);\n\nvar client_num = 1;\nfunction onLoad() {\n    document.querySelector('#btnLoad').addEventListener('click', () => {\n        main('cd ../server/build && cmake -DCMAKE_BUILD_TYPE=Release .. && make -j8');\n    });\n    document.querySelector('#btnSave').addEventListener('click', () => {\n        main('cd ../server/build && ./server' + ' ' + client_num);\n        console.log('cd ../server/build && ./server' + ' ' + client_num);\n    });\n    document.querySelector('#btnAdd').addEventListener('click', () => {\n        client_num++;\n        var messages = document.querySelector('ul');\n        const li = document.createElement('li');\n        // let { stdout } = await sh(command);\n        li.textContent = 'Now NumClient:' + client_num;\n        messages.insertBefore(li, messages.firstElementChild);\n        \n    });\n    document.querySelector('#btnReduce').addEventListener('click', () => {\n        client_num--;\n        var messages = document.querySelector('ul');\n        const li = document.createElement('li');\n        // let { stdout } = await sh(command);\n        li.textContent = 'Now NumClient:' + client_num;\n        messages.insertBefore(li, messages.firstElementChild);\n        \n    });\n    document.querySelector('#btnKill').addEventListener('click', () => {\n        kill();\n        \n    });\n\n    document.querySelector('#btnClean').addEventListener('click', () => {\n        clean();\n        \n    });\n};"],"sourceRoot":""}